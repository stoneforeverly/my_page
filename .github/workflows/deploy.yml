name: 构建并部署博客应用

on:
  push:
    branches: [ main ]  # 当推送到main分支时触发

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v2

      - name: 设置QEMU
        uses: docker/setup-qemu-action@v1

      - name: 设置Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: 登录到DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 构建并推送前端镜像
        uses: docker/build-push-action@v2
        with:
          context: ./my_page_frontend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-blog-frontend:latest

      - name: 构建并推送后端镜像
        uses: docker/build-push-action@v2
        with:
          context: ./my_page_backend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-blog-backend:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: 部署到EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # 登录到DockerHub
            echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
            
            # 拉取最新镜像
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/my-blog-frontend:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/my-blog-backend:latest
            
            # 停止并删除旧容器（如果存在）
            docker-compose -f ~/my-blog/docker-compose.yml down || true
            
            # 确保目录存在
            mkdir -p ~/my-blog
            
            # 创建或更新docker-compose.yml文件
            cat > ~/my-blog/docker-compose.yml << 'EOL'
            version: '3'

            services:
              frontend:
                image: ${{ secrets.DOCKERHUB_USERNAME }}/my-blog-frontend:latest
                ports:
                  - "80:80"
                depends_on:
                  - backend
                restart: always

              backend:
                image: ${{ secrets.DOCKERHUB_USERNAME }}/my-blog-backend:latest
                ports:
                  - "5000:5000"
                depends_on:
                  - mongodb
                environment:
                  - MONGO_URI=mongodb://mongodb:27017/blog_db
                restart: always

              mongodb:
                image: mongo:latest
                ports:
                  - "27017:27017"
                volumes:
                  - mongo-data:/data/db
                restart: always

            volumes:
              mongo-data:
            EOL
            
            # 启动容器
            cd ~/my-blog && docker-compose up -d