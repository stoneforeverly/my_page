name: 构建并部署博客应用

on:
  push:
    branches: [ main ]  # 当推送到main分支时触发

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v3  # 更新到v3版本
        with:
          fetch-depth: 0  # 获取完整历史记录

      - name: 设置QEMU
        uses: docker/setup-qemu-action@v2

      - name: 设置Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 登录到DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 构建并推送前端镜像
        uses: docker/build-push-action@v3
        with:
          context: ./my_page_frontend
          file: ./my_page_frontend/Dockerfile  # 明确指定Dockerfile路径
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-page-frontend:latest

      - name: 构建并推送后端镜像
        uses: docker/build-push-action@v3
        with:
          context: ./my_page_backend
          file: ./my_page_backend/Dockerfile  # 明确指定Dockerfile路径
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-page-backend:latest

  # 部署部分保持不变
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        
      - name: 将docker-compose.yml复制到EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "docker-compose.yml"
          target: "~/my-page"
          
      - name: 部署到EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # 登录到DockerHub
            echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
            
            # 拉取最新镜像
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/my-page-frontend:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/my-page-backend:latest
            
            # 确保目录存在
            mkdir -p ~/my-page
            
            # 修改docker-compose.yml中的镜像引用
            cd ~/my-page
            sed -i "s|build: ./my_page_frontend|image: ${{ secrets.DOCKERHUB_USERNAME }}/my-page-frontend:latest|g" docker-compose.yml
            sed -i "s|build: ./my_page_backend|image: ${{ secrets.DOCKERHUB_USERNAME }}/my-page-backend:latest|g" docker-compose.yml
            
            # 停止并删除旧容器（如果存在）
            docker-compose down || true
            
            # 启动容器
            docker-compose up -d