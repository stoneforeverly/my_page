name: 构建并部署博客应用

on:
  push:
    branches: [ main ]  # 当推送到main分支时触发

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v3  # 更新到v3版本
        with:
          fetch-depth: 0  # 获取完整历史记录

      - name: 设置QEMU
        uses: docker/setup-qemu-action@v2

      - name: 设置Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 登录到DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 构建并推送前端镜像
        uses: docker/build-push-action@v3
        with:
          context: ./my_page_frontend
          file: ./my_page_frontend/Dockerfile  # 明确指定Dockerfile路径
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-page-frontend:latest

      - name: 构建并推送后端镜像
        uses: docker/build-push-action@v3
        with:
          context: ./my_page_backend
          file: ./my_page_backend/Dockerfile  # 明确指定Dockerfile路径
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-page-backend:latest

  # 部署部分使用不同的SSH动作
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      # 设置SSH密钥
      - name: 设置SSH密钥
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # 添加EC2主机到known_hosts
      - name: 添加EC2主机到known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      # 将docker-compose.yml复制到EC2
      - name: 将docker-compose.yml复制到EC2
        run: |
          scp docker-compose.yml ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:~/my-page/

      # 创建并复制部署脚本
      - name: 创建并复制部署脚本
        run: |
          cat > deploy.sh << 'EOF'
          #!/bin/bash
          # 登录到DockerHub
          echo $1 | docker login -u $2 --password-stdin
          
          # 拉取最新镜像
          docker pull $2/my-page-frontend:latest
          docker pull $2/my-page-backend:latest
          
          # 确保目录存在
          mkdir -p ~/my-page
          
          # 修改docker-compose.yml中的镜像引用
          cd ~/my-page
          sed -i "s|build: ./my_page_frontend|image: $2/my-page-frontend:latest|g" docker-compose.yml
          sed -i "s|build: ./my_page_backend|image: $2/my-page-backend:latest|g" docker-compose.yml
          
          # 停止并删除旧容器（如果存在）
          docker-compose down || true
          
          # 启动容器
          docker-compose up -d
          EOF
          chmod +x deploy.sh
          scp deploy.sh ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:~/

      # 在EC2上执行部署脚本
      - name: 在EC2上执行部署脚本
        run: |
          ssh ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "bash ~/deploy.sh '${{ secrets.DOCKERHUB_TOKEN }}' '${{ secrets.DOCKERHUB_USERNAME }}'"